// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// CustomerTokenCreationRequestIntendedUseEnum - Intended use for the token.
type CustomerTokenCreationRequestIntendedUseEnum string

const (
	CustomerTokenCreationRequestIntendedUseEnumSubscription CustomerTokenCreationRequestIntendedUseEnum = "SUBSCRIPTION"
)

func (e CustomerTokenCreationRequestIntendedUseEnum) ToPointer() *CustomerTokenCreationRequestIntendedUseEnum {
	return &e
}

func (e *CustomerTokenCreationRequestIntendedUseEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "SUBSCRIPTION":
		*e = CustomerTokenCreationRequestIntendedUseEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for CustomerTokenCreationRequestIntendedUseEnum: %v", v)
	}
}

type CustomerTokenCreationRequest struct {
	BillingAddress *Address  `json:"billing_address,omitempty"`
	Customer       *Customer `json:"customer,omitempty"`
	// Description of the purpose of the token.
	Description string `json:"description"`
	// Intended use for the token.
	IntendedUse CustomerTokenCreationRequestIntendedUseEnum `json:"intended_use"`
	// RFC 1766 customer's locale.
	Locale string `json:"locale"`
	// ISO 3166 alpha-2 purchase country.
	PurchaseCountry string `json:"purchase_country"`
	// ISO 4217 purchase currency.
	PurchaseCurrency string `json:"purchase_currency"`
}
