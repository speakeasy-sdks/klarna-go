// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// SubscriptionIntervalEnum - The cadence unit for this.
type SubscriptionIntervalEnum string

const (
	SubscriptionIntervalEnumDay   SubscriptionIntervalEnum = "DAY"
	SubscriptionIntervalEnumWeek  SubscriptionIntervalEnum = "WEEK"
	SubscriptionIntervalEnumMonth SubscriptionIntervalEnum = "MONTH"
	SubscriptionIntervalEnumYear  SubscriptionIntervalEnum = "YEAR"
)

func (e SubscriptionIntervalEnum) ToPointer() *SubscriptionIntervalEnum {
	return &e
}

func (e *SubscriptionIntervalEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "DAY":
		fallthrough
	case "WEEK":
		fallthrough
	case "MONTH":
		fallthrough
	case "YEAR":
		*e = SubscriptionIntervalEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for SubscriptionIntervalEnum: %v", v)
	}
}

type Subscription struct {
	// The cadence unit for this.
	Interval SubscriptionIntervalEnum `json:"interval"`
	// The number of intervals
	IntervalCount int64 `json:"interval_count"`
	// The name of the subscription product
	Name string `json:"name"`
}
